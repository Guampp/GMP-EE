package br.com.gmp.comps.datefield;

import br.com.gmp.comps.baloontip.src.BalloonUtil;
import br.com.gmp.comps.interfaces.ValidableComponent;
import br.com.gmp.utils.formatter.MaskFormats;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.text.DateFormat;
import java.text.FieldPosition;
import java.text.ParseException;
import java.text.ParsePosition;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.text.DateFormatter;
import javax.swing.text.DefaultFormatterFactory;
import org.jdesktop.swingx.SwingXUtilities;

/**
 *
 * @author kaciano
 */
public class GMPDateField extends JFormattedTextField implements ValidableComponent {

    private Date date;

    /**
     * Creates new form GMPDateField
     */
    public GMPDateField() {
        initialize();
    }

    /**
     * Inicializa o componente
     */
    private void initialize() {
        initComponents();
        setMask();
        setDate(new Date());
        this.setLayout(new BorderLayout());
        this.add(jBDate, BorderLayout.EAST);
        jPopDate.add(jPCalendar);
    }

    /**
     * Adiciona a mascara ao campo
     */
    private void setMask() {
        setFormatterFactory(new DefaultFormatterFactory(new MaskFormats()
                .getMask(MaskFormats.DATE)));
    }

    /**
     * Retorna a data selecionada
     *
     * @return Date Data selecionada
     * @throws ParseException
     */
    public Date getDate() throws ParseException {
        return date;
    }

    /**
     * Modifica a data
     *
     * @param date
     */
    public void setDate(Date date) {
        this.date = date;
        jXCalendar.getCalendar().set(date.getYear(), date.getMonth(), date.getDay());
        jXCalendar.setSelectionDate(date);
        jXCalendar.setFirstDisplayedDay(date);
        jXCalendar.repaint();
        jXCalendar.revalidate();
        setText(new SimpleDateFormat("dd/MM/yyyy").format(date));
    }



    /**
     *
     * @return
     */
    public int getMonth() {
        return jXCalendar.getCalendar().getTime().getMonth();
    }

    /**
     *
     * @return
     */
    public int getYear() {
        return jXCalendar.getCalendar().getTime().getYear();
    }

    /**
     * Vai para o próximo mês
     */
    public void nextMonth() {
        if (date.getMonth() == 12) {
            date.setMonth(1);
            date.setYear(date.getYear() + 1);
        } else {
            date.setMonth(date.getMonth() + 1);
        }
        setDate(date);
    }

    /**
     * Volta para o mês anterior
     */
    public void previousMonth() {
        if (date.getMonth() == 1) {
            date.setMonth(12);
            date.setYear(date.getYear() - 1);
        } else {
            date.setMonth(date.getMonth() - 1);
        }
        setDate(date);
    }

    /**
     * Vai para o próximo ano
     */
    public void nextYear() {
        date.setYear(date.getYear() + 1);
        setDate(date);
    }

    /**
     * Volta ao ano anterior
     */
    public void previousYear() {
        date.setYear(date.getYear() - 1);
        setDate(date);
    }

    /**
     * Ação de componente em foco
     *
     * @param e FocusEvent
     */
    public void focusGained(FocusEvent e) {
        this.setBackground(new Color(255, 230, 166));
    }

    /**
     * Ação de componente sem foco
     *
     * @param e FocusEvent
     */
    public void focusLost(FocusEvent e) {
        this.setBackground(new JTextField().getBackground());
        if (getText().equals("") || getText() == null) {
            setDate(date);
        }
    }

    @Override
    public boolean validateComponent() {
        if (this.getText().equals("") || this.getText() == null) {
            new BalloonUtil().showModernBallon(jXCalendar, "Data invalida!");
            return false;
        } else {
            return true;
        }
    }

    /**
     * Mostra a PopUp de seleção de datas
     */
    private void openPopUp() {
        jBDate.setComponentPopupMenu(jPopDate);
        jBDate.getComponentPopupMenu().show(jBDate.getParent(), 0, getHeight());
    }

    public void checkPop() {
        if (jPopDate.isShowing()) {
            jPopDate.setVisible(false);
        } else {
            jPopDate.show(jBDate.getParent(), 0, getHeight());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopDate = new javax.swing.JPopupMenu();
        jPCalendar = new javax.swing.JPanel();
        jTBPrev = new javax.swing.JToolBar();
        jBPreviousYear = new javax.swing.JButton();
        jBPreviousMonth = new javax.swing.JButton();
        jTBYear = new javax.swing.JToolBar();
        jTBNext = new javax.swing.JToolBar();
        jBNextMonth = new javax.swing.JButton();
        jBNextYear = new javax.swing.JButton();
        jXCalendar = new org.jdesktop.swingx.JXMonthView();
        jBDate = new javax.swing.JButton();

        jTBPrev.setFloatable(false);
        jTBPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jBPreviousYear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Hide_left.png"))); // NOI18N
        jBPreviousYear.setFocusable(false);
        jBPreviousYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBPreviousYear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBPreviousYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPreviousYearActionPerformed(evt);
            }
        });
        jTBPrev.add(jBPreviousYear);

        jBPreviousMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Navigate_left.png"))); // NOI18N
        jBPreviousMonth.setFocusable(false);
        jBPreviousMonth.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBPreviousMonth.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBPreviousMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPreviousMonthActionPerformed(evt);
            }
        });
        jTBPrev.add(jBPreviousMonth);

        jTBYear.setFloatable(false);

        jTBNext.setFloatable(false);

        jBNextMonth.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Navigate_right.png"))); // NOI18N
        jBNextMonth.setFocusable(false);
        jBNextMonth.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNextMonth.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNextMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNextMonthActionPerformed(evt);
            }
        });
        jTBNext.add(jBNextMonth);

        jBNextYear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Hide_right.png"))); // NOI18N
        jBNextYear.setFocusable(false);
        jBNextYear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBNextYear.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBNextYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBNextYearActionPerformed(evt);
            }
        });
        jTBNext.add(jBNextYear);

        jXCalendar.setDaysOfTheWeek(new String[] {"Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sab"});
        jXCalendar.setDaysOfTheWeekForeground(new java.awt.Color(102, 0, 0));
        jXCalendar.setSelectionForeground(new java.awt.Color(255, 102, 0));
        jXCalendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jXCalendarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPCalendarLayout = new javax.swing.GroupLayout(jPCalendar);
        jPCalendar.setLayout(jPCalendarLayout);
        jPCalendarLayout.setHorizontalGroup(
            jPCalendarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPCalendarLayout.createSequentialGroup()
                .addComponent(jTBPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTBYear, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jTBNext, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jXCalendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPCalendarLayout.setVerticalGroup(
            jPCalendarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCalendarLayout.createSequentialGroup()
                .addGroup(jPCalendarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTBNext, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTBPrev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTBYear, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPCalendarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jTBNext, jTBPrev, jTBYear});

        jBDate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/gmp/comps/icons/16/Calendar_selection_all.png"))); // NOI18N
        jBDate.setToolTipText("Escolher data");
        jBDate.setMaximumSize(new java.awt.Dimension(26, 26));
        jBDate.setMinimumSize(new java.awt.Dimension(26, 26));
        jBDate.setPreferredSize(new java.awt.Dimension(26, 26));
        jBDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDateActionPerformed(evt);
            }
        });

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        setComponentPopupMenu(jPopDate);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
    }// </editor-fold>//GEN-END:initComponents

    private void jBDatePickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDatePickActionPerformed

    }//GEN-LAST:event_jBDatePickActionPerformed

    private void jFTDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFTDateFocusGained

    }//GEN-LAST:event_jFTDateFocusGained

    private void jFTDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jFTDateFocusLost

    }//GEN-LAST:event_jFTDateFocusLost

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        focusGained(evt);
    }//GEN-LAST:event_formFocusGained

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        focusLost(evt);
    }//GEN-LAST:event_formFocusLost

    private void jXCalendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jXCalendarMouseClicked
        if (evt.getClickCount() == 2) {
            setDate(jXCalendar.getSelectionDate());
            checkPop();
        } else {
            setDate(jXCalendar.getSelectionDate());
        }
    }//GEN-LAST:event_jXCalendarMouseClicked

    private void jBDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDateActionPerformed
        checkPop();
    }//GEN-LAST:event_jBDateActionPerformed

    private void jBPreviousYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPreviousYearActionPerformed
        previousYear();
    }//GEN-LAST:event_jBPreviousYearActionPerformed

    private void jBPreviousMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPreviousMonthActionPerformed
        previousMonth();
    }//GEN-LAST:event_jBPreviousMonthActionPerformed

    private void jBNextMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNextMonthActionPerformed
        nextMonth();
    }//GEN-LAST:event_jBNextMonthActionPerformed

    private void jBNextYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBNextYearActionPerformed
        nextYear();
    }//GEN-LAST:event_jBNextYearActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBDate;
    private javax.swing.JButton jBNextMonth;
    private javax.swing.JButton jBNextYear;
    private javax.swing.JButton jBPreviousMonth;
    private javax.swing.JButton jBPreviousYear;
    private javax.swing.JPanel jPCalendar;
    private javax.swing.JPopupMenu jPopDate;
    private javax.swing.JToolBar jTBNext;
    private javax.swing.JToolBar jTBPrev;
    private javax.swing.JToolBar jTBYear;
    private org.jdesktop.swingx.JXMonthView jXCalendar;
    // End of variables declaration//GEN-END:variables

}
